
PROBLEM : we have to divide array into 2 parts such that left part sum is equal to right part sum.
#include<iostream>
using namespace std;
int main()
{

    int arr[8]={3,4,-2,5,8,20,-10,8};
    int n=8;
   
    
    
    for( int i=0;i<n;i++)
    {
        int sum1=0,sum2=0;
     
     for( int j=0;j<i;j++)
    {
       sum1+=arr[j];
     
    }
    
    for( int j=i+1;j<n-1;j++)
    {
       sum2+=arr[j];
     
    }
    
       if(sum1==sum2){
            cout<<"Partition at index:"<<i;
        }

   }
    
    return 0;
}
time complexity:O(n*n)



# optimized Approach


#include<iostream>
using namespace std;
int main()
{

    int arr[8]={3,4,-2,5,8,20,-10,8};
    int n=8;
   int sum=0;
   int ans=0;
   int prefix=0;
   for(int i=0;i<n;i++)
   {
     sum+=arr[i];
   }
   for(int i=0;i<n-1;i++)
   {
    prefix+=arr[i];
     ans=sum-prefix;
    if(ans==prefix)
    cout<<"Partition at index:"<<i;
    }
    
    return 0;
}
TIME COMPLEXITY:0(N)
