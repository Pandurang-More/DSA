nput: Linked list: 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8, k = 2
Output: 1 -> 3 -> 5 -> 7

Explanation: After removing every 2nd node of the linked list, the resultant linked list will be: 1 -> 3 -> 5 -> 7.

  /* Link list Node

struct Node
{
    int data;
    struct Node* next;

    Node(int x){
        data = x;
        next = NULL;
    }

};
*/

/*You are required to complete this method*/

/* Function to get the middle of the linked list*/
/*K will always be in range */
class Solution {
  public:
    Node* deleteK(Node* head, int k) {
        // code here
        Node*prev=NULL;
        Node*curr=head;
        int count=1;
        
        if(k==1)
        return NULL;
        
        while(curr!=NULL)
        {
            if(k==count)
            {
               prev->next=curr->next;
               delete curr;
               curr=prev->next;
               count=1;
               
            }
            else
            {
                prev=curr;
                curr=curr->next;
                
                count++;
            }
            
        }
        
        return head;
    }
};
