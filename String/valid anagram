Given two strings s and t, return true if t is an anagram of s, and false otherwise.

Example 1:

Input: s = "anagram", t = "nagaram"

Output: true

Example 2:

Input: s = "rat", t = "car"

Output: false

 
Constraints:

1 <= s.length, t.length <= 5 * 104
s and t consist of lowercase English letters.




class Solution {
public:
    bool isAnagram(string s, string t) {
        if (s.size() != t.size())
            return false;

        vector<int> shash(256, 0);  // frequency for s
        vector<int> thash(256, 0);  // frequency for t

        for (int i = 0; i < s.size(); i++) {
            shash[s[i]]++;
            thash[t[i]]++;
        }

        return shash == thash;
    }
};

optimized than previous one , here using 1 vector.
  
class Solution
  {
public:
    bool isAnagram(string s, string t) 
    {
        if (s.size() != t.size())
            return false;

        vector<int> freq(256, 0);

        for (int i = 0; i < s.size(); i++) 
        {
            freq[s[i]]++;
            freq[t[i]]--;
        }

        for (int i = 0; i < freq.size(); i++) 
        {
          if (freq[i] != 0)
          return false;
        }
return true;

    }
};


  time complexity:O(n)
  space complexity:O(1)
